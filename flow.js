[{"id":"c691ad49.65edb8","type":"tab","label":"New KPN dev. Portal","disabled":false,"info":""},{"id":"54514d5e.b09714","type":"http in","z":"c691ad49.65edb8","name":"LoRa Post Catcher","url":"/kpnlorapost","method":"post","upload":false,"swaggerDoc":"","x":130,"y":160,"wires":[["7abfbf95.eed988","c1d2de7b.2135d"]]},{"id":"11ff8dfc.1fb7fa","type":"http response","z":"c691ad49.65edb8","name":"LoRa Post Reply","statusCode":"","headers":{},"x":630,"y":160,"wires":[]},{"id":"7abfbf95.eed988","type":"function","z":"c691ad49.65edb8","name":"Data processor KPN developer portal","func":"// objects counted counted in payload\nvar objectCount = msg.payload.length;\n\n// Create variables to hold JSON \nvar msgc = {};\nvar msgp = {};\nvar result = {};\n\n// Prepare http responce\nvar msg200 = {};        // Variable to hold http responce message\nmsg200.payload = \"200\"; // \"200\" for OK\nmsg200.req = msg.req;   // req from original msg for http responce node\nmsg200.res = msg.res;   // res from original msg for http responce node\n\n// Test if it dat ais KPN format\n// Verification 1: Test for number of objects in array. Shall be > 3\nif( objectCount > 2){\n    // Verification 2: test if \"bn\" object is at position 0 of object array\n    if (msg.payload[0].hasOwnProperty(\"bn\")) {\n        \n        // Save original http post message for presenting later\n        var rawPost = {};\n        rawPost = msg.payload;\n        \n        // extract devEUI from http post data\n        var devEUI =      msg.payload[0].bn.split(\":\")[3];\n            \n        // save headers for specific usage.\n        //  result.things_devicespecification_uuid = msg.req.headers[\"things-devicespecification-uuid\"];\n        //  result.things_client_uuid = msg.req.headers[\"things-client-uuid\"];\n        //  result.things_plug_uuid = msg.req.headers[\"things-plug-uuid\"];\n        result.things_message_token = msg.req.headers[\"things-message-token\"];\n        \n        // Test for payload formatted data\n        if( msg.payload[1].n == \"payload\"){\n            \n        /*----------- data format -------------*/\n        \n        // This process is using CayenneLPP format\n            \n            msgp.payload =     msg.payload[1].vs;   // Payload data for decoding by CayenneLPP decoder\n            msgp.rawPayload =  msg.payload[1].vs;   // Preserve original payload for presenting later\n            msgp.rawPost =     rawPost;             // complete JSON woth htto POST message form KPN portal\n            msgp.devEUI =      devEUI;\n            \n            // prepare data for decoding by CayenneLPP decoder \n            result.port =      msg.payload[2].v;\n            // take time in Unix time format in seconds and convert to readable time (MySQL compatible)\n            result.locTime =   new Date(msg.payload[0].bt*1000).toISOString().slice(0, 19).replace('T', ' ');\n            \n            msgp.metadata = result;\n            node.send([[msg200],null,[msgp]]);\n            \n        }else if( msg.payload[1].n == \"locOrigin\"){\n            \n        /*----------- Geo-location format -------------*/\n            \n            msgc.devEUI =      devEUI;\n            \n            result.rawPost =   rawPost;\n            result.locOrigin = msg.payload[1].vs;\n            result.latitude =  msg.payload[2].v;\n            result.longitude = msg.payload[3].v;\n            result.radius =    msg.payload[4].v;\n            // take time in Unix time format and convert to readable time (MySQL compatible)\n            result.locTime =   new Date(parseInt(msg.payload[7].vs)).toISOString().slice(0, 19).replace('T', ' ');\n            \n            msgc.payload =     result;\n            node.send([[msg200],[msgc],[null]]);\n            \n        }else{\n            // Wrong payload: ignore!\n        }\n    }\n}\n","outputs":3,"noerr":0,"x":330,"y":240,"wires":[["11ff8dfc.1fb7fa"],["73fe7493.6871b4"],["582be4b2.d5040c"]],"info":"--------------------------------------------------------------------\nThis Node is part of the PE1MEW Node-Red KPN developer POST application.\n\nThe PE1MEW Node-Red KPN developer POST application is free software: \nyou can redistribute it and/or modify it under the terms of a Creative \nCommons Attribution-NonCommercial 4.0 International License \n(http://creativecommons.org/licenses/by-nc/4.0/) by \nPE1MEW (http://pe1mew.nl) E-mail: pe1mew@pe1mew.nl\n\nThe PE1MEW KPN developer POST application is distributed in the hope that \nit will be useful, but WITHOUT ANY WARRANTY; without even the \nimplied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR \nPURPOSE.\n--------------------------------------------------------------------\n\n\\brief Receive http POST data from KPN developer portal\n\\date 12-1-2020\n\\author Remko Welling (pe1mew@pe1mew.nl)\n\\version See version history\n\n## version history\n\nversion | Date      | Athour | Notes\n--------|-----------|--------|-----------------------------------\n1.0     | 12-1-2020 | PE1MEW | First release\n\n## ToDo\n\n1: Add authentication method\n"},{"id":"582be4b2.d5040c","type":"cayennelpp-decoder","z":"c691ad49.65edb8","name":"","x":640,"y":280,"wires":[["3a886b5a.2813cc"]]},{"id":"792fba9d.c8cfb4","type":"mqtt out","z":"c691ad49.65edb8","name":"","topic":"","qos":"","retain":"","broker":"d9afedc9.bf67b8","x":1070,"y":260,"wires":[]},{"id":"3a886b5a.2813cc","type":"function","z":"c691ad49.65edb8","name":"Payload MQTT sender","func":"// Set parameters for MQTT \nmsg2 = {};\nmsg2.qos = 0;\nmsg2.retain = false;\n\n// Send raw payload\nmsg2.topic = \"kpn/\" + msg.devEUI + \"/data/rawPost\";\nmsg2.payload = msg.rawPost;\nnode.send(msg2);\n\n// Send raw payload\nmsg2.topic = \"kpn/\" + msg.devEUI + \"/data/raw\";\nmsg2.payload = msg.rawPayload;\nnode.send(msg2);\n\n// send individual content of JSON struct to MQTT with associated topics.\nfor (var key in msg.payload){\n    msg2.topic = \"kpn/\" + msg.devEUI + \"/data/decoded/\" + key;\n    msg2.payload = msg.payload[key];\n    node.send(msg2);\n}\n\n// Send metadata\nfor (var key2 in msg.metadata){\n    msg2.topic = \"kpn/\" + msg.devEUI + \"/data/\" + key2;\n    msg2.payload = msg.metadata[key2];\n    node.send(msg2);\n}","outputs":1,"noerr":0,"x":860,"y":280,"wires":[["792fba9d.c8cfb4"]],"info":"--------------------------------------------------------------------\nThis Node is part of the PE1MEW Node-Red KPN developer POST application.\n\nThe PE1MEW Node-Red KPN developer POST application is free software: \nyou can redistribute it and/or modify it under the terms of a Creative \nCommons Attribution-NonCommercial 4.0 International License \n(http://creativecommons.org/licenses/by-nc/4.0/) by \nPE1MEW (http://pe1mew.nl) E-mail: pe1mew@pe1mew.nl\n\nThe PE1MEW KPN developer POST application is distributed in the hope that \nit will be useful, but WITHOUT ANY WARRANTY; without even the \nimplied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR \nPURPOSE.\n--------------------------------------------------------------------\n\n\\brief Send payload data to MQTT\n\\date 12-1-2020\n\\author Remko Welling (pe1mew@pe1mew.nl)\n\\version See version history\n\n## Dependancies\n\nThis node is using port 3 from the \"Data processor KPN developer portal\" node\nthat is decoded by the CayenneLPP decoder node.\n\n## version history\n\nversion | Date      | Athour | Notes\n--------|-----------|--------|-----------------------------------\n1.0     | 12-1-2020 | PE1MEW | First release\n\n## ToDo\n\n\n"},{"id":"73fe7493.6871b4","type":"function","z":"c691ad49.65edb8","name":"Location MQTT sender","func":"// Set parameters for MQTT \nmsg2 = {};\nmsg2.qos = 0;\nmsg2.retain = false;\n\n// Send all individual values from struc to MQTT with corresponding topic\nfor (var key in msg.payload){\n    msg2.topic = \"kpn/\" + msg.devEUI + \"/location/\" + key;\n    msg2.payload = msg.payload[key];\n    node.send(msg2);\n}\n","outputs":1,"noerr":0,"x":870,"y":240,"wires":[["792fba9d.c8cfb4"]],"info":"--------------------------------------------------------------------\nThis Node is part of the PE1MEW Node-Red KPN developer POST application.\n\nThe PE1MEW Node-Red KPN developer POST application is free software: \nyou can redistribute it and/or modify it under the terms of a Creative \nCommons Attribution-NonCommercial 4.0 International License \n(http://creativecommons.org/licenses/by-nc/4.0/) by \nPE1MEW (http://pe1mew.nl) E-mail: pe1mew@pe1mew.nl\n\nThe PE1MEW KPN developer POST application is distributed in the hope that \nit will be useful, but WITHOUT ANY WARRANTY; without even the \nimplied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR \nPURPOSE.\n--------------------------------------------------------------------\n\n\\brief Send Location data to MQTT\n\\date 12-1-2020\n\\author Remko Welling (pe1mew@pe1mew.nl)\n\\version See version history\n\n## Dependancies\n\nThis node is using port 2 from the \"Data processor KPN developer portal\" node\n\n## version history\n\nversion | Date      | Athour | Notes\n--------|-----------|--------|-----------------------------------\n1.0     | 12-1-2020 | PE1MEW | First release\n\n## ToDo\n\n\n"},{"id":"c1d2de7b.2135d","type":"file","z":"c691ad49.65edb8","name":"Logging raw data","filename":"/home/remko/kpn/raw_data.txt","appendNewline":true,"createDir":false,"overwriteFile":"false","encoding":"none","x":270,"y":80,"wires":[[]]},{"id":"ecd7a7ed.e5a82","type":"comment","z":"c691ad49.65edb8","name":"Correct data will receive \"200\"","info":"","x":380,"y":160,"wires":[]},{"id":"d9afedc9.bf67b8","type":"mqtt-broker","z":"","name":"","broker":"pe1mew.duckdns.org","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]